FROM ubuntu AS sources
# In order to skip region and timezone questions
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
   && apt-get install -y tzdata git \
   && git clone --recursive https://github.com/ClickHouse/ClickHouse.git
 
 
 
FROM ubuntu AS builder
COPY --from=sources ClickHouse/ ClickHouse/
# Building ClickHouse from sources, Reference: https://clickhouse.com/docs/en/development/build-cross-arm/
RUN apt-get update \
   && apt-get install -y tzdata cmake ninja-build python wget curl lsb-release software-properties-common \
   && curl -o llvm.sh https://apt.llvm.org/llvm.sh \
   && chmod +x llvm.sh \
   && ./llvm.sh \
   && export CC=clang-13 \
   && export CXX=clang++-13
 
RUN cd ClickHouse \
   && mkdir -p build-aarch64/cmake/toolchain/linux-aarch64 \
   && wget 'https://developer.arm.com/-/media/Files/downloads/gnu-a/8.3-2019.03/binrel/gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz?revision=2e88a73f-d233-4f96-b1f4-d8b36e9bb0b9&la=en' -O gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz \
   && tar xJf gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz -C build-aarch64/cmake/toolchain/linux-aarch64 --strip-components=1 \
   && mkdir build-arm64 \
   && CC=clang-13 CXX=clang++-13 cmake -S/ClickHouse/ -Bbuild-arm64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=cmake/linux/toolchain-aarch64.cmake \
   && ninja -C build-arm64 \
   && apt-get clean autoclean \
   && apt-get autoremove --yes \
   && rm -rf /var/lib/{apt,dpkg,cache,log}
 
 
##Release stage
FROM ubuntu AS image
LABEL org.opencontainers.image.source https://github.com/inovex/attractify
 
#Add dependencies for odbc
RUN apt-get update \
 && apt-get install -y tzdata unixodbc odbcinst odbc-postgresql\
 && apt-get clean autoclean \
 && apt-get autoremove --yes \
 && rm -rf /var/lib/{apt,dpkg,cache,log}
 
# Add custom config files
ADD /docker/clickhouse/config/config.xml /etc/clickhouse-server/config.xml
ADD /docker/clickhouse/config/users.xml /etc/clickhouse-server/users.xml
 
# Add DB dependencies
ADD /docker/clickhouse/config/odbc.ini /etc/
ADD /docker/clickhouse/config/odbcinst_arm64.ini /etc/odbcinst.ini
ADD /server/schema/clickhouse.sql /docker-entrypoint-initdb.d/
COPY --from=yandex/clickhouse-server entrypoint.sh entrypoint.sh
RUN chmod +x entrypoint.sh
 
# Add all dependencies from build
COPY --from=builder ClickHouse/build-arm64/programs/clickhouse                      /usr/bin/
COPY --from=builder ClickHouse/build-arm64/programs/clickhouse-odbc-bridge          /usr/bin/
 
RUN apt-get install -y gosu && apt-get install -y wget \
   && useradd clickhouse \
   && cd / && cd usr/bin/ \
   && ln -s clickhouse clickhouse-server \
   && ln -s clickhouse clickhouse-client \
   && ln -s clickhouse clickhouse-extract-from-config
 
ENTRYPOINT ["./entrypoint.sh"]

